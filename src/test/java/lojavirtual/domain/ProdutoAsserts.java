package lojavirtual.domain;

import static lojavirtual.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class ProdutoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProdutoAllPropertiesEquals(Produto expected, Produto actual) {
        assertProdutoAutoGeneratedPropertiesEquals(expected, actual);
        assertProdutoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProdutoAllUpdatablePropertiesEquals(Produto expected, Produto actual) {
        assertProdutoUpdatableFieldsEquals(expected, actual);
        assertProdutoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProdutoAutoGeneratedPropertiesEquals(Produto expected, Produto actual) {
        assertThat(actual)
            .as("Verify Produto auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProdutoUpdatableFieldsEquals(Produto expected, Produto actual) {
        assertThat(actual)
            .as("Verify Produto relevant properties")
            .satisfies(a -> assertThat(a.getNome()).as("check nome").isEqualTo(expected.getNome()))
            .satisfies(a -> assertThat(a.getPreco()).as("check preco").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getPreco()))
            .satisfies(a -> assertThat(a.getDescricao()).as("check descricao").isEqualTo(expected.getDescricao()))
            .satisfies(a -> assertThat(a.getQuantidade()).as("check quantidade").isEqualTo(expected.getQuantidade()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProdutoUpdatableRelationshipsEquals(Produto expected, Produto actual) {
        // empty method
    }
}
